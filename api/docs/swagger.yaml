basePath: /api/v1
definitions:
  domain.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - email
    - name
    type: object
  domain.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  handlers.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Jibe API server with user management capabilities.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Jibe API
  version: "1.0"
paths:
  /:
    get:
      description: Get API information and version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: API root
      tags:
      - root
  /health:
    get:
      description: Check if the API server is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Health check
      tags:
      - health
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of users with pagination
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.User'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Update a user
      tags:
      - users
schemes:
- http
- https
swagger: "2.0"
